# Config file for Tanglebeat 

logging:
    # debug false
    debug: false
    # subdirectory where to put logs and other working files. Must exist
    workingSubdir: "/log"
    # if true doesn't write to file logs, only to console
    logConsoleOnly: false
    # duplicate logging to separate file for each sequence
    # effective if logConsoleOnly = false
    logSequencesSeparately: true
    # if true file logs will be rotated every 12 hours with retain period of 36 hours
    rotateLogs: true 
    # log formatting as defined in go-logging package. https://github.com/op/go-logging
    # master log format
    logFormat: "%{time:06-01-02 15:04:05.000} %{level:.4s} [%{module:.6s}] %{message}"
    # used for debugging if specified, otherwise master format used
    logFormatDebug: "%{time:2006-01-02 15:04:05.000} %{level:.4s} [%{module:.6s}|%{shortfunc:.12s}] %{message}"
    # mem stats logged
    # mems stats interval seconds
    memStats: true
    memStatsInterval: 10
    
# sender configuration section    
sender:
    # is sender enabled.
    enabled: true
    # Global parameters, inherited (used as defaults) by individual sequences
    globals:
        # default IOTA node. Used for all calls, except can be overriden by specifiing nodes for 
        # POW (attachToTange) and tip selection (getTransactionsToApprove)
        iotaNode: &DEFNODE https://field.deviota.com:443
        # IOTA nodes for getTransactionsToApprove
        iotaNodeTipsel: *DEFNODE          
        # IOTA node for attachToTangle
        iotaNodePOW: https://api.powsrv.io:443
        # respective api timeouts in seconds
        apiTimeout: 30
        tipselTimeout: 30
        powTimeout: 30
        # tx tags. Must be tryte strings no longer than 27 trytes
        txTag: TANGLE9BEAT
        txTagPromote: TANGLE9BEAT
        # seconds to sleep after every promotion. If 0 next promotion is started immediately after the previous
        promoteEverySec: 15
        # normally bundles are reattached when becimes inconsistent as per 'checkConsisteny'. 
        # With this parameter specifies minutes after which reattachment is forced even if is still consistent
        forceReattachAfterMin: 15
        # if > 0, restart sequence after consecutive N API errors
        seqRestartAfterErr: 30
        
    # Sequences
    # each sequence is configured with YAML maping 'sequences name' -> (mappings parameters -> values)
    # Each sequence inherits global parameteres 
    # If a parameter is provided in a sequences section it overrides global parameter. 
    
    sequences:
        Seq A:
            enabled: false
            # overrides global with individual node for the sequence
            iotaNode: https://field.deviota.com:443
            # seed must be 81 trytes
            seed: SEED9SEED
            # address index with which to start
            index0: 0
            # if true -> promote the previuos promote ('chain' strategy)
            # if false -> always promote the original bundle ('blowball' strategy)
            promoteChain: true
        Second sequence:
            enabled: true
            seed: SEED9SEED
            index0: 0
            promoteChain: true

# Update collector and publisher section
senderUpdateCollector: 
    # sender update collector is enabled if at least one of sources is enabled
    # sender update collector collects updates from one or more sources to one stream
    sources: 
        # sources with the name 'local' means that all updates generated by this instance are collected into 
        # resulting stream. If 'local' source is disabled, it means that localy generated updates have no effect on metrics and are not published
        local:
            enabled: true
        # unlimited number of external tanglebeat instances can be specified. 
        # Each source is listened for published updates and collected into the resulting stream. 
        tanglebeat2:
            enabled: true
            target: "tcp://node.myserver.com:3100"
    # if true, resulting stream of updates is published to outside through specified port
    # if false, resulting stream is not published and only used to calculate the metrics
    publish: true
    outPort: 3100
            
# Metrics section            
prometheus:
    # if false, metrics are not exposed
    enabled: true
    scrapeTargetPort: 8080
    # if false, metrics are not calculated from the stream of updates and not exposed to Prometheus
    senderMetricsEnabled: true
    # if true, tanglebeat will start reading Zero MQ stream from specified URI and will expose ZMQ based metrics to Prometheus
    zmqMetrics:    
        enabled: true
        zmqUri: "tcp://myzmqnode.com:31415"
            
